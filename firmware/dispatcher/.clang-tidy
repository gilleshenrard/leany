# SPDX-FileCopyrightText: 2025 Gilles Henrard <contact@gilleshenrard.com>
#
# SPDX-License-Identifier: MIT

#clang-tidy examples command-line :
#    python.exe C:\msys64\ucrt64\bin\run-clang-tidy -quiet -p .\build\Debug\ -extra-arg=--sysroot=C:/msys64/ucrt64/arm-none-eabi -extra-arg=--target=armv7m-none-eabi -extra-arg=-mthumb -header-filter=.* "(Hardware|UI)"
---
#Arguments to make clang-tidy work with the cross-compiler
ExtraArgs:
  - "--target=armv7m-none-eabi"
  - "-Wno-unknown-warning-option"

#Checks enabled : all except :
  # cppcoreguidelines-avoid-non-const-global-variables  : Lots of global variables are used, and can't all be set as const
  # altera-unroll-loops                                 : Avoid unrolling space overhead, and let the compiler optimise loops
  # altera-id-dependent-backward-branch                 : Timer counters are used in loops, and those are considered as ID-dependant
  # llvmlibc-restrict-system-libc-headers               : ARM GNU Toolchain system headers will be used
  # llvm-include-order                                  : Format style is based on Google's, which has an incompatible include order
  # performance-no-int-to-ptr                           : GPIO ports are int addresses casted to pointers
  # google-readability-todo                             : Just plain annoying
  # llvm-header-guard                                   : LLVM-style header guards are too restrictive
Checks: "*,\
  -cppcoreguidelines-avoid-non-const-global-variables,\
  -altera-unroll-loops,\
  -altera-id-dependent-backward-branch,\
  -llvmlibc-restrict-system-libc-headers,\
  -llvm-include-order,\
  -performance-no-int-to-ptr,\
  -google-readability-todo,\
  -llvm-header-guard"

#Promote all enabled warnings as errors
WarningsAsErrors:
  "*"

#Include headers located in Components/ during linting
HeaderFilterRegex:
  "*"

#Format fixes as stated in the .clang-format file
FormatStyle:
  file

#Use colours in output, if possible
UseColor:
  true

#Fine-tuning options
CheckOptions:
  #Warnings options
  - key: 'bugprone-easily-swappable-parameters.ModelImplicitConversions'  #Do not consider mixing if different type definitions
    value: 'false'

  #Formatting options
  # Google style guide : https://google.github.io/styleguide/cppguide.html
  - key: 'readability-identifier-naming.ClassCase'
    value: 'CamelCase'
  - key: 'readability-identifier-naming.TypedefCase'
    value: 'CamelCase'
  - key: 'readability-identifier-naming.TypeAliasCase'
    value: 'CamelCase'
  - key: 'readability-identifier-naming.TypeTemplateParameterCase'
    value: 'CamelCase'
  - key: 'readability-identifier-naming.EnumCase'
    value: 'CamelCase'
  - key: 'readability-identifier-naming.StructCase'
    value: 'CamelCase'
  - key: 'readability-identifier-naming.VariableCase'
    value: 'lower_case'
  - key: 'readability-identifier-naming.ParameterCase'
    value: 'lower_case'
  - key: 'readability-identifier-naming.ClassMemberCase'
    value: 'lower_case'
  - key: 'readability-identifier-naming.ClassMemberSuffix'
    value: '_'
  - key: 'readability-identifier-naming.MemberCase'
    value: 'lower_case'
  - key: 'readability-identifier-naming.StaticConstantCase'
    value: 'aNy_CasE'
  - key: 'readability-identifier-naming.StaticConstantPrefix'
    value: 'k'
  - key: 'readability-identifier-naming.GlobalConstantCase'
    value: 'aNy_CasE'
  - key: 'readability-identifier-naming.GlobalConstantPrefix'
    value: 'k'
  - key: 'readability-identifier-naming.ConstantCase'
    value: 'lower_case'
  - key: 'readability-identifier-naming.FunctionCase'
    value: 'aNy_CasE'
  - key: 'readability-identifier-naming.NamespaceCase'
    value: 'lower_case'
  - key: 'readability-identifier-naming.EnumConstantCase'
    value: 'aNy_CasE'
  - key: 'readability-identifier-naming.EnumConstantPrefix'
    value: 'k'
  - key: 'readability-identifier-naming.TemplateParameterCase'
    value: 'CamelCase'
  - key: 'readability-identifier-naming.TypeTemplateParameterCase'
    value: 'aNy_CasE'
  - key: 'readability-identifier-naming.TypeTemplateParameterPrefix'
    value: 'k'
  - key: 'readability-identifier-naming.MacroDefinitionCase'
    value: 'UPPER_CASE'
...
