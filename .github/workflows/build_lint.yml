name: Build and lint
on: 
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

env:
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ubuntu-latest
  
    steps:
      - name: Install Install GNU Arm Embedded Toolchain - latest
        uses: carlosperate/arm-none-eabi-gcc-action@v1
        id: arm-none-eabi-gcc-action
        with:
          release: latest
      # - name: Output the `path` to the toolchain executables
      #   run: echo "The output path is ${{ steps.arm-none-eabi-gcc-action.outputs.path }}"

      - name: Install Ninja Build
        uses: turtlesec-no/get-ninja@main

      - name: Checkout the repository
        uses: actions/checkout@v4
      
      - name: Configure CMake
        run: cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/cmake/gcc-arm-none-eabi.cmake -B ${{github.workspace}}/build/${{env.BUILD_TYPE}} -G Ninja

      - name: Compile the firmware
        run: cmake --build ${{github.workspace}}/build/${{env.BUILD_TYPE}}

  lint:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Install CppCheck
        run:  sudo apt-get install -y cppcheck

      - name: Check if compilation database exists
        run:  cat ${{github.workspace}}/build/${{env.BUILD_TYPE}}/compile_commands.json

      - name: Check if cppcheck config file exists
        run:  cat ${{github.workspace}}/config_debug.cppcheck

      - name: Run CppCheck
        run:  cppcheck --enable=all --project=${{github.workspace}}/config_debug.cppcheck

    